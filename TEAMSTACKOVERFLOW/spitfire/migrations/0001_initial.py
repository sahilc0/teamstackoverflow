# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-12-11 18:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular artist across whole site', primary_key=True, serialize=False)),
                ('firstName', models.CharField(default='Firstname', max_length=100)),
                ('lastName', models.CharField(default='Lastname', max_length=100)),
                ('city', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(max_length=2000)),
                ('number_of_spits', models.PositiveIntegerField(default=0)),
                ('number_of_followers', models.PositiveIntegerField(default=0)),
                ('number_of_following', models.PositiveIntegerField(default=0)),
                ('date_of_birth', models.DateField(null=True)),
                ('first_joined', models.DateField(null=True)),
                ('twitter_link', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=100, null=True)),
                ('soundcloud_link', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.FileField(default='user_propics/profile_default.png', upload_to='user_propics/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=2000)),
                ('image', models.FileField(default='sponsor/sponsor_default.png', upload_to='sponsor/')),
                ('reward', models.PositiveIntegerField(default=0)),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a book genre (e.g. hip hop, R&B, 90s, etc)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LyricComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular lyrics across whole site', primary_key=True, serialize=False)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('text', models.TextField(max_length=1000)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='Lyrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular lyrics across whole site', primary_key=True, serialize=False)),
                ('title', models.CharField(default='Some Terrific Lyrics', max_length=100)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('text', models.TextField(default='Lyrical spiritual lyrics!', help_text='Enter lyrics', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular track across whole site', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('keywords', models.TextField(blank=True, max_length=30)),
                ('featured', models.BooleanField(default=False)),
                ('image', models.FileField(default='track_pics/trackpic_default.jpg', upload_to='track_pics/')),
                ('mp3', models.FileField(default='user_audio/track_default.mp3', upload_to='user_audio/')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Artist')),
                ('genre', models.ManyToManyField(help_text='Select a genre for this track', to='spitfire.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='TrackComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular lyrics across whole site', primary_key=True, serialize=False)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('text', models.TextField(help_text='Enter a comment', max_length=1000)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Track')),
            ],
        ),
        migrations.AddField(
            model_name='lyrics',
            name='Track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Track'),
        ),
        migrations.AddField(
            model_name='lyrics',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Artist'),
        ),
        migrations.AddField(
            model_name='lyrics',
            name='genre',
            field=models.ManyToManyField(help_text='Select a genre for this track', to='spitfire.Genre'),
        ),
        migrations.AddField(
            model_name='lyriccomment',
            name='lyrics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spitfire.Lyrics'),
        ),
        migrations.AddField(
            model_name='contest',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contest', to='spitfire.Track'),
        ),
    ]
